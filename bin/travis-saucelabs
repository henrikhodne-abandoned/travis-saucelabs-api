#!/usr/bin/env ruby
require 'thor'
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)
require 'travis-saucelabs-api'

class TravisSaucelabs < Thor
  desc 'list', 'Print a list of the currently running instances'
  def list
    instances = api.list_instances['instances']
    instances.each do |instance_id|
      info = api.instance_info(instance_id)
      puts "Instance ID: #{info['instance_id']}"
      info.each do |key, value|
        puts "  #{key}: #{value}"
      end
      puts
    end
  end

  desc 'start', 'Starts a new VM instance'
  option :hostname
  option :password
  def start
    instance_id = api.start_instance(startup_info)['instance_id']
    puts "Started instance with ID #{instance_id}"
    print "Allowing outgoing connections..."
    api.allow_outgoing(instance_id)
    puts "done"
  end

  desc 'kill INSTANCE_ID', 'Kills the instance with the given instance ID'
  def kill(instance_id)
    puts api.kill_instance(instance_id)['message']
  end

  desc 'kill_pid PID', 'Kills all instances belonging to a PID'
  def kill_pid(pid)
    instances = api.list_instances['instances'].select do |instance_id|
      info = api.instance_info(instance_id)
      info['extra_info'] &&
        info['extra_info']['hostname'] &&
        info['extra_info']['hostname'] =~ /^testing-saucelabs-mac-#{pid}/
    end

    instances.each do |instance_id|
      kill(instance_id)
    end
  end

  desc 'save_image INSTANCE_ID NAME', 'Saves an image of instance with name'
  def save_image(instance_id, name)
    puts api.save_image(instance_id, name)['message']
  end

  desc 'allow_incoming INSTANCE_ID CIDR PORT', 'Opens an incoming port in the firewall'
  def allow_incoming(instance_id, cidr, port)
    puts api.allow_incoming(instance_id, cidr, port)['message']
  end

  private

  def api
    @api ||= begin
      unless ENV['TRAVIS_SAUCE_API_URI']
        puts 'You need to set the TRAVIS_SAUCE_API_URI environment variable'
        puts '  export TRAVIS_SAUCE_API_URI="http://user:password@api-endpoint:port"'
        exit 1
      end
      Travis::SaucelabsAPI.new(ENV['TRAVIS_SAUCE_API_URI'])
    end
  end

  def startup_info
    if options[:hostname] || options[:password]
      startup_info = {}
      startup_info[:hostname] = options[:hostname] if options[:hostname]
      startup_info[:password] = options[:password] if options[:password]
      startup_info
    else
      nil
    end
  end
end

TravisSaucelabs.start
